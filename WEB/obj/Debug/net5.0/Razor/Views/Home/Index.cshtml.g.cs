#pragma checksum "D:\dotnet\TazeProject\WEB\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5dc9adf047c948bb948d56100d90f1184194d203"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "D:\dotnet\TazeProject\WEB\Views\_ViewImports.cshtml"
using DTO.UserDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\dotnet\TazeProject\WEB\Views\_ViewImports.cshtml"
using CORE.Prevail;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\dotnet\TazeProject\WEB\Views\_ViewImports.cshtml"
using Domain;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5dc9adf047c948bb948d56100d90f1184194d203", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2feb9c6073f73be7c29f63ad333663b0204dd9e1", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\dotnet\TazeProject\WEB\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<div id=""vm"" v-cloak>
    <div class=""container"">
        <h2 class=""text-center text-dark text-capitalize w-100"">
            Proje Hakkında
        </h2>
        <div class=""row"">
            <h3>1.	Genel Hususlar</h3>
            <p>
                a.	Proje genelinde c# ve javascript dilleri; .net core, vue.js, bootstrap, jquery, axios, dapper yapıları ve MS-Sql veritabanı kullanılmıştır.
            </p>
            <p>
                b.	MS-Sql konfigurasyonu kapsamında “Data Source=.; Initial Catalog=TazeProjectDb; Integrated Security=true;” connection string olarak verilmiştir.
            </p>
            <p>
                c.	CRUD işlemleri dapper ile yapılmış olmasına rağmen MS-Sql tarafında oluşacak veritabanı EntitiyFramework CodeFirst kullanılarak oluşturulmuştur. Aynı zamanda authentication için EntityFramework Identity kullanılmıştır. EntityFramework CodeFirst yaklaşımı çerçevesinde MS-Sql üzerinde veritabanın oluşumu ve ilişkilerin kurulması için sırasıyla aşağıda sunulan i");
            WriteLiteral(@"şlemler yapılmalıdır.<br />
                &nbsp;&nbsp;1)	DAL katmanına sağ tıklanarak “set as startup project” seçilmeli,<br />
                &nbsp;&nbsp;2)	PackageManagerConsole açılmalı,<br />
                &nbsp;&nbsp;3)	PackageManagerConsole alanında defaultproject olarak DAL katmanı seçilmeli,<br />
                &nbsp;&nbsp;4)	MS-Sql bilgisayarda kurulu olmalı,<br />
                &nbsp;&nbsp;5)	.Net 5.0 SDK’sı yüklenmeli,<br />
                &nbsp;&nbsp;6)	PackageManagerConsole alanına update-database yazılarak enter yapılmalı,<br />
                &nbsp;&nbsp;7)	İşlemin tamamlanmasını müteakip WEB katmanına sağ tıklanarak “set as startup project” seçilmelidir.
            </p>

            <h3>2.	.Net Yapısı ve Katmanlı Mimari</h3>
            <p>
                a.	Proje 6 katmandan oluşmaktadır.
            </p>
            <p>
                b.	CORE:<br />
                &nbsp;&nbsp;1)	Data klasörü içinde Repository Pattern yapısına ait sınıflar bulunur.<br />
      ");
            WriteLiteral(@"          &nbsp;&nbsp;2)	Repository_Dapper sınıfı crud işlemlerinin dapper ile generic olarak yapılabilmesi için oluşturulmuştur.<br />
                &nbsp;&nbsp;3)	Prevail klasöründe yardımcı sınıflar mevcuttur.
            </p>
            <p>
                c.	DAL:<br />
                &nbsp;&nbsp;1)	MS-Sql’de oluşacak veritabanının EntityFramework ve EntityFrameworkIdentity yapıları ile konfigure edilebilmesi için gerekli fluentapi sınıfları, EntityFramework dbcontext sınıfı, dapper repository pattern için IDal interface ve Dal sınıfları bulunur. <br />
                &nbsp;&nbsp;2)	Crud işlemleri için dapper, authentication ve MS-Sql veritabanının konfigurasyonu için EntityFramework CodeFirst yaklaşımı tercih edilmiştir.
            </p>
            <p>
                d.	DOMAIN katmanında EntityFramework CodeFirst yaklaşımına uygun olarak oluşturulmuş entity sınıfları mevcuttur.
            </p>
            <p>
                e.	BLL katmanı bu projede repository pattern için oluştuulmu");
            WriteLiteral(@"ş fakat ihtiyaç duyulmadığı için yanlızca service interface ve manager sınıflarını bulundurması için kullanılmıştır.
            </p>
            <p>
                f.	DTO katmanında entity sınıfları kapsamında yapılacak işlemlere uygun sınıflar oluşturulmuştur.
            </p>
            <p>
                g.	WEB:<br />
                &nbsp;&nbsp;1)	.net yapısına uygun olarak hazırlanmıştır. <br />
                &nbsp;&nbsp;2)	Areas klasörü içinde rest api yapıları mevcuttur.<br />
                &nbsp;&nbsp;3)	Controllers klasorü içinde MVC yapısına uygun olarak sınıflar Controller sınıfından kalıtılan sınıflar mevcuttur.<br />
                &nbsp;&nbsp;4)	Extentions klasöründe EntityFrameworkIdentity, AutoMapper ve Cors konfigurasyonları bulunur.<br />
                &nbsp;&nbsp;5)	View klasöründe IActionResult dönen controller yapılarına ait cshtml dosyaları mevcuttur. Navbar için partialview kullanılmıştır.<br />
            </p>

            <h3>3.	Projenin İşleyişi</h3>
      ");
            WriteLiteral(@"      <p>
                a.	Proje “/Home/Index” yolu üzerinden açılır ve proje özetini içerir.
            </p>
            <p>
                b.	Eğer kullanıcı authentication olmamış ise “/User/SignIn” yoluna yönlendirilir.
            </p>
            <p>
                c.	Eğer kullanıcıya ait user yok ise “SignUp” butonu üzerinden “/User/SignUp” yoluna ulaşarak user oluşturulur. Kullanıcı var veya yeni oluşturulmuş ise “/User/SignIn” yolundan giriş yapılır. Burada EntityFrameworkIdentity yapısına bağlı cookie bazlı authentication yapılır.
            </p>
            <p>
                d.	“/Home/Index” kısaca “/” yolu proje özetini içerir.
            </p>
            <p>
                e.	“/Category/Index” kısaca “/Category” yolu kategorilerin yönetimi içindir.
            </p>
            <p>
                f.	“/Article/Index” kısaca “/Article” yolu yazıların yönetimi içindir.
            </p>
            <p>
                g.	“/Article/Add” yolu yeni yazı eklemek içindir.
    ");
            WriteLiteral(@"        </p>
            <p>
                h.	“/Article/Read” yolu yazının okunması içindir.
            </p>
            <p>
                i.  Proje genelinde View dosyalarına model gönderilmesi yerine verilerin axios ile client tarafında çekilmesi tercih edilmiştir.
            </p>          
        </div>
    </div>
</div>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
