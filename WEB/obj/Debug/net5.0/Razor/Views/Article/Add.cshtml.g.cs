#pragma checksum "D:\dotnet\TazeProject\WEB\Views\Article\Add.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f06a620b40ebd54003c95de1e9fef18bdeb92969"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Article_Add), @"mvc.1.0.view", @"/Views/Article/Add.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "D:\dotnet\TazeProject\WEB\Views\_ViewImports.cshtml"
using DTO.UserDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\dotnet\TazeProject\WEB\Views\_ViewImports.cshtml"
using CORE.Prevail;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\dotnet\TazeProject\WEB\Views\_ViewImports.cshtml"
using Domain;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f06a620b40ebd54003c95de1e9fef18bdeb92969", @"/Views/Article/Add.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2feb9c6073f73be7c29f63ad333663b0204dd9e1", @"/Views/_ViewImports.cshtml")]
    public class Views_Article_Add : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("category,index in categories"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-bind:key", new global::Microsoft.AspNetCore.Html.HtmlString("category.Id"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-bind:value", new global::Microsoft.AspNetCore.Html.HtmlString("category.Id"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\dotnet\TazeProject\WEB\Views\Article\Add.cshtml"
  
    ViewData["Title"] = "Add";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<div id=""vm"">
    <div class=""container"">
        <h2 class=""text-center text-dark text-capitalize w-100"">
            Yeni Yazı Ekle
        </h2>
        <div class=""row"">
            <div class=""col-lg-8 col-md-10 col-sm-12 col-12 offset-lg-2 offset-md-1 py-2"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f06a620b40ebd54003c95de1e9fef18bdeb929694991", async() => {
                WriteLiteral("\r\n                    <div class=\"p-3\">\r\n                        <label><b>Kategori :</b></label>\r\n                        <select class=\"form-control\" v-model=\"article.categoryId\">\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f06a620b40ebd54003c95de1e9fef18bdeb929695470", async() => {
                    WriteLiteral("\r\n                                {{category.Name}}\r\n                            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>
                    </div>
                    <div class=""p-3"">
                        <label><b>Başlık :</b></label>
                        <input class=""form-control"" type=""text"" v-model=""article.caption""/>
                    </div>
                    <div class=""p-3"">
                        <label><b>Özet Bilgi :</b></label>
                        <input class=""form-control"" type=""text"" v-model=""article.description""/>
                    </div>
                    <div class=""p-3"">
                        <label><b>İçerik :</b></label>
                        <ckeditor :editor=""editor"" v-model=""article.content"" :config=""editorConfig""></ckeditor>
                    </div>
                    <div class=""p-3"">
                        <label><b>Yazı Posteri :</b></label>
                        <input id=""posterInput"" class=""form-control"" type=""file"" v-on:change=""upload($event)"" accept=""image/*""/>
                        <div class=""w-100 text-cente");
                WriteLiteral(@"r p-3"">
                            <img id=""posterImg"" class=""img-fluid img-thumbnail"" />
                        </div>                
                    </div>
                    <div class=""p-3 text-end"">
                        <button type=""button"" class=""btn btn-outline-success"" style=""min-width:200px"" v-on:click=""save"" v-bind:disabled=""!readyToSend"">
                            Kaydet
                        </button>
                    </div>
                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
        </div>
    </div>
</div>



<script> 
    const vm = Vue.createApp({
        data() {
            return {
                editor: ClassicEditor,
                editorData: '',
                editorConfig: {
                    // The configuration of the editor.
                },
                categories: [],
                article: {
                    categoryId: null,
                    caption: '',
                    description: '',
                    content: '',
                    imgFile: null
                }
            }
        },
        created() {
            this.getCategories();
        },
        computed: {
            readyToSend() {
                return this.article.caption != '' && this.article.description != '' && this.article.content != '' && this.article.imgFile != null;
            }
        },
        methods: {
            getCategories() {
                axios.get(""/Service/CategoryApi/GetAll"")
     ");
            WriteLiteral(@"               .then(resp => {
                        if (resp.data.Success) {
                            this.categories = resp.data.Data;
                            if (this.categories.length > 0) {
                                this.article.categoryId = this.categories[0].Id;
                            }
                        } else {
                            Swal.fire(
                                'Kategorileri Getirme',
                                'Kategorileri getirme sırasında hata olustu',
                                'error'
                            )
                        }
                    })
                    .catch(err => {
                        Swal.fire(
                            'Kategorileri Getirme',
                            'Kategorileri getirme sırasında hata olustu',
                            'error'
                        )
                    })
                    .finally(_ => {

                    })
            },
  ");
            WriteLiteral(@"          save() {
                let formData = new FormData();
                formData.append(""categoryId"", this.article.categoryId);
                formData.append(""caption"", this.article.caption);
                formData.append(""description"", this.article.description);
                formData.append(""content"", this.article.content);
                formData.append(""imgFile"", this.article.imgFile);
                axios.post(""/Service/ArticleApi/Insert"", formData, {
                    headers: {
                        'Content-Type': 'multipart/form-data'
                    }
                })
                    .then(resp => {
                        if (resp.data.Success) {
                            Swal.fire(
                                'Yazı Ekleme',
                                'Yeni yazı başarılı şekilde eklendi',
                                'success'
                            )
                        } else {
                            Swal.fire(
     ");
            WriteLiteral(@"                           'Yazı Ekleme',
                                'Yeni yazı ekleme sırasında hata oluştu',
                                'error'
                            )
                        }                     
                    })
                    .catch(err => {
                        Swal.fire(
                            'Yazı Ekleme',
                            'Yeni yazı ekleme sırasında hata oluştu',
                            'error'
                        )
                    }).
                    finally(_ => {

                    })
            },
            upload(e) {
                var url = URL.createObjectURL(e.target.files[0]);
                document.querySelector(""#posterImg"").setAttribute(""src"", url);
                this.article.imgFile = e.target.files[0];
            }
        }
    }).use(CKEditor).mount('#vm');
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
